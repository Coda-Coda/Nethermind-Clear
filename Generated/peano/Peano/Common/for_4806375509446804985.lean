import Clear.ReasoningPrinciple

import Generated.peano.Peano.Common.if_6183625948864629624
import Generated.peano.Peano.addk

import Generated.peano.Peano.Common.for_4806375509446804985_gen

import Generated.peano.Peano.Common.for_4806375509446804985_user


namespace Peano.Common

set_option autoImplicit false

section

open Clear EVMState Ast Expr Stmt FunctionDefinition State Interpreter ExecLemmas OutOfFuelLemmas Abstraction YulNotation PrimOps ReasoningPrinciple Utilities Peano.Common Generated.peano Peano

lemma for_4806375509446804985_post_abs_of_code {s₀ : State} {fuel : Nat} :
  ∀ s₉, exec fuel (Block for_4806375509446804985_post) s₀ = s₉ →
        Spec APost_for_4806375509446804985 s₀ s₉ :=
    λ _ h ↦ for_4806375509446804985_concrete_of_post_abs (for_4806375509446804985_post_concrete_of_code.2 h)

lemma for_4806375509446804985_body_abs_of_code {s₀ : State} {fuel : Nat} :
  ∀ s₉, exec fuel (Block for_4806375509446804985_body) s₀ = s₉ →
        Spec ABody_for_4806375509446804985 s₀ s₉ :=
    λ _ h ↦ for_4806375509446804985_concrete_of_body_abs (for_4806375509446804985_body_concrete_of_code.2 h)

-- | Code → Abstract (autogenerated).
lemma for_4806375509446804985_abs_of_code {s₀ fuel} : ∀ s₉, exec fuel for_4806375509446804985 s₀ = s₉ → Spec AFor_for_4806375509446804985 s₀ s₉ := by
  intros s₉
  intros hcode
  apply reasoning_principle_3 for_4806375509446804985_cond for_4806375509446804985_post for_4806375509446804985_body ACond_for_4806375509446804985 APost_for_4806375509446804985 ABody_for_4806375509446804985 AFor_for_4806375509446804985 AZero_for_4806375509446804985 AOk_for_4806375509446804985 AContinue_for_4806375509446804985 ABreak_for_4806375509446804985 ALeave_for_4806375509446804985 @for_4806375509446804985_cond_abs_of_code @for_4806375509446804985_post_abs_of_code @for_4806375509446804985_body_abs_of_code hcode

end

end Peano.Common
