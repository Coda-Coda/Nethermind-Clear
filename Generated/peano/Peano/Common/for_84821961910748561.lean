import Clear.ReasoningPrinciple

import Generated.peano.Peano.Common.if_6183625948864629624

import Generated.peano.Peano.Common.for_84821961910748561_gen

import Generated.peano.Peano.Common.for_84821961910748561_user


namespace Peano.Common

set_option autoImplicit false

section

open Clear EVMState Ast Expr Stmt FunctionDefinition State Interpreter ExecLemmas OutOfFuelLemmas Abstraction YulNotation PrimOps ReasoningPrinciple Utilities Peano.Common 

lemma for_84821961910748561_post_abs_of_code {s₀ : State} {fuel : Nat} :
  ∀ s₉, exec fuel (Block for_84821961910748561_post) s₀ = s₉ →
        Spec APost_for_84821961910748561 s₀ s₉ :=
    λ _ h ↦ for_84821961910748561_concrete_of_post_abs (for_84821961910748561_post_concrete_of_code.2 h)

lemma for_84821961910748561_body_abs_of_code {s₀ : State} {fuel : Nat} :
  ∀ s₉, exec fuel (Block for_84821961910748561_body) s₀ = s₉ →
        Spec ABody_for_84821961910748561 s₀ s₉ :=
    λ _ h ↦ for_84821961910748561_concrete_of_body_abs (for_84821961910748561_body_concrete_of_code.2 h)

-- | Code → Abstract (autogenerated).
lemma for_84821961910748561_abs_of_code {s₀ fuel} : ∀ s₉, exec fuel for_84821961910748561 s₀ = s₉ → Spec AFor_for_84821961910748561 s₀ s₉ := by
  intros s₉
  intros hcode
  apply reasoning_principle_3 for_84821961910748561_cond for_84821961910748561_post for_84821961910748561_body ACond_for_84821961910748561 APost_for_84821961910748561 ABody_for_84821961910748561 AFor_for_84821961910748561 AZero_for_84821961910748561 AOk_for_84821961910748561 AContinue_for_84821961910748561 ABreak_for_84821961910748561 ALeave_for_84821961910748561 @for_84821961910748561_cond_abs_of_code @for_84821961910748561_post_abs_of_code @for_84821961910748561_body_abs_of_code hcode

end

end Peano.Common
